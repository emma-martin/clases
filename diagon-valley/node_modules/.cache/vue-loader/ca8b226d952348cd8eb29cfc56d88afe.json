{"remainingRequest":"/Users/vuejs/Documents/clases/diagon-valley/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/vuejs/Documents/clases/diagon-valley/src/components/DiagonValley.vue?vue&type=style&index=0&id=4199ea39&scoped=true&lang=scss&","dependencies":[{"path":"/Users/vuejs/Documents/clases/diagon-valley/src/components/DiagonValley.vue","mtime":1581167599729},{"path":"/Users/vuejs/Documents/clases/diagon-valley/node_modules/css-loader/dist/cjs.js","mtime":1581167156387},{"path":"/Users/vuejs/Documents/clases/diagon-valley/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1581167159893},{"path":"/Users/vuejs/Documents/clases/diagon-valley/node_modules/postcss-loader/src/index.js","mtime":1581167158232},{"path":"/Users/vuejs/Documents/clases/diagon-valley/node_modules/sass-loader/dist/cjs.js","mtime":1581167159384},{"path":"/Users/vuejs/Documents/clases/diagon-valley/node_modules/cache-loader/dist/cjs.js","mtime":1581167155685},{"path":"/Users/vuejs/Documents/clases/diagon-valley/node_modules/vue-loader/lib/index.js","mtime":1581167159892}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKaDMgewogIG1hcmdpbjogNDBweCAwIDA7Cn0KdWwgewogIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTsKICBwYWRkaW5nOiAwOwp9CmxpIHsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgbWFyZ2luOiAwIDEwcHg7Cn0KYSB7CiAgY29sb3I6ICM0MmI5ODM7Cn0K"},{"version":3,"sources":["DiagonValley.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DiagonValley.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"hello\">\n    <h1>{{ 'Shopping time' }}</h1>\n    <section>\n    <h2>Shopping Cart Items:</h2>\n      <ul v-for=\"(card, index) in cards\" :key=\"index\">\n        <diagon-item\n        :card=\"card\"\n        :index=\"index\"\n        @card-index=\"deleteItem(index)\"\n        @card-data=\"addItem(index)\"\n        />\n      </ul>\n  <div>\n    <h4>Total:</h4>\n    <p>{{`${totalCart} $$$`}}</p>\n  </div>\n    </section>\n  </div>\n</template>\n\n<script>\nimport DiagonItem from './DiagonItem.vue';\n\nexport default {\n  name: 'DiagonValley',\n  components: {\n    DiagonItem,\n  },\ncomputed: {\n  cards(){\n    return this.$store.state.cards;\n  },\n  // que el total sea un getter en elstore\n  totalCart(){\n    return this.cards.reduce((acc, card)=> {\n     return acc + card.price*card.qty;\n    }, 0);  \n  },\n},\nmethods:{\n    deleteItem(index) {\n      this.$store.dispatch('deleteItem', index);\n    },\n    priceCategory(item) {\n        return item.qty * item.price;\n    },\n    onChangeQty(qty){\n      return qty;\n    },\n    addItem(index){\n      this.$store.dispatch('addItem', index);\n    }\n  }\n}\n</script>\n<style scoped lang=\"scss\">\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n\n\n//todo: crear componente DiagonItem, se le envia el prop de la card,\n// el item emite los eventos de increment y decrement qty, \n// mete un boton en cada fila que permite borrar un elemento del carrito\nemitiendo el index a eliminar\n\n\n// fix previous version since i messed updated() {\n  <!-- //<template>\n  <div class=\"hello\">\n    <h1>{{ 'Shopping time' }}</h1>\n    <section>\n      <h2>Shopping Cart Items:</h2>\n      <div v-if=\"cards.length === 0\">\n        <p>No items to show</p>\n      </div>\n      <ul v-else>\n       <li v-for=\"(card, index) in cards\" :key=\"index\">  \n        <diagon-item\n          :card=\"card\"\n          @increment=\"onIncrement\"\n          @decrement=\"onDecrement\"\n          @delete=\"deleteItem(card, index)\"\n        />\n        </li>\n      </ul>\n      <div>\n        <h4>Total:</h4>\n        <p>{{`${totalCart} $$$`}}</p>\n      </div>\n    </section>\n    </div>\n </template> -->\n\n// import DiagonItem from './DiagonItem.vue';\n\n// export default {\n//   name: 'DiagonValley',\n//   components: {\n//     DiagonItem,\n//   },\n// data() {\n//   return {\n//     cards:[\n//       {\n//         title: 'Book',\n//         price: 31,\n//         qty: 1,\n//         id: 324,\n//       },\n//       {\n//         title: 'Wand',\n//         price: 240,\n//         qty: 1,\n//         id: 229,\n\n//       },\n//       {\n//         title: 'Hat',\n//         price: 280,\n//         qty: 1,\n//         id: 268,\n//       },\n//     ],\n//   }\n// },\n// computed: {\n//   totalCart(){\n//     const total = this.cards.reduce((acc, card)=> {\n//      return acc + card.price*card.qty;\n//     }, 0);\n//   return total;    \n//   },\n// },\n// methods:{\n//     deleteItem(card, index) {\n//       if(this.cards[index] === card) { \n//         this.cards.splice(index, 1)\n//       }\n//     },\n//     onIncrement(card){\n//       return card.qty++;\n//     },\n//       onDecrement(card){\n//       return card.qty--;\n//     },\n//   }\n// }\n"]}]}