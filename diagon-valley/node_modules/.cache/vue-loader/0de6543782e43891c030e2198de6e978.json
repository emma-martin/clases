{"remainingRequest":"/home/emmartin/Documents/clases/diagon-valley/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/emmartin/Documents/clases/diagon-valley/src/components/DiagonValley.vue?vue&type=style&index=0&id=4199ea39&scoped=true&lang=scss&","dependencies":[{"path":"/home/emmartin/Documents/clases/diagon-valley/src/components/DiagonValley.vue","mtime":1580054691680},{"path":"/home/emmartin/Documents/clases/diagon-valley/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/emmartin/Documents/clases/diagon-valley/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/emmartin/Documents/clases/diagon-valley/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/emmartin/Documents/clases/diagon-valley/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/emmartin/Documents/clases/diagon-valley/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/emmartin/Documents/clases/diagon-valley/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKaDMgewogIG1hcmdpbjogNDBweCAwIDA7Cn0KdWwgewogIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTsKICBwYWRkaW5nOiAwOwp9CmxpIHsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgbWFyZ2luOiAwIDEwcHg7Cn0KYSB7CiAgY29sb3I6ICM0MmI5ODM7Cn0K"},{"version":3,"sources":["DiagonValley.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DiagonValley.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"hello\">\n    <h1>{{ 'Shopping time' }}</h1>\n    <section>\n    <h2>Shopping Cart Items:</h2>\n      <ul v-for=\"(card, index) in cards\" :key=\"index\">\n        <diagon-item\n        :card=\"card\"\n        :index=\"index\"\n        />\n      </ul>\n  <div>\n    <h4>Total:</h4>\n    <p>{{`${totalCart} $$$`}}</p>\n  </div>\n    </section>\n  </div>\n</template>\n\n<script>\nimport DiagonItem from './DiagonItem.vue';\n\nexport default {\n  name: 'DiagonValley',\n  components: {\n    DiagonItem,\n  },\ndata() {\n  return {\n    cards:[\n      {\n        title: 'book',\n        price: 31,\n        qty: 1,\n      },\n      {\n        title: 'wand',\n        price: 240,\n        qty: 1,\n      },\n      {\n        title: 'hat',\n        price: 280,\n        qty: 1,\n      },\n    ],\n  }\n},\ncomputed: {\n  totalCart(){\n    const total = this.cards.reduce((acc, card)=> {\n     return acc + card.price*card.qty;\n    }, 0);\n  return total;    \n  },\n},\nmethods:{\n    deleteItem(index) {\n      if(this.cards[index].qty <= 0) { \n        this.cards.splice(index, 1)\n      }\n    },\n    priceCategory(item) {\n        return item.qty * item.price;\n    },\n    onChangeQty(qty){\n      return qty;\n    }\n  }\n}\n</script>\n<style scoped lang=\"scss\">\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n\n\n//todo: crear componente DiagonItem, se le envia el prop de la card,\nel item emite los eventos de increment y decrement qty, \nmete un boton en cada fila que permite borrar un elemento del carrito\nemitiendo el index a eliminar\n"]}]}