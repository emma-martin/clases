{"remainingRequest":"/home/emmartin/Documents/clases/diagon-valley/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/emmartin/Documents/clases/diagon-valley/src/components/DiagonValley.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/emmartin/Documents/clases/diagon-valley/src/components/DiagonValley.vue","mtime":1580059407884},{"path":"/home/emmartin/Documents/clases/diagon-valley/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/emmartin/Documents/clases/diagon-valley/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/emmartin/Documents/clases/diagon-valley/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/emmartin/Documents/clases/diagon-valley/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBEaWFnb25JdGVtIGZyb20gJy4vRGlhZ29uSXRlbS52dWUnOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdEaWFnb25WYWxsZXknLAogIGNvbXBvbmVudHM6IHsKICAgIERpYWdvbkl0ZW0sCiAgfSwKZGF0YSgpIHsKICByZXR1cm4gewogICAgY2FyZHM6WwogICAgICB7CiAgICAgICAgdGl0bGU6ICdCb29rJywKICAgICAgICBwcmljZTogMzEsCiAgICAgICAgcXR5OiAxLAogICAgICAgIGlkOiAzMjQsCiAgICAgIH0sCiAgICAgIHsKICAgICAgICB0aXRsZTogJ1dhbmQnLAogICAgICAgIHByaWNlOiAyNDAsCiAgICAgICAgcXR5OiAxLAogICAgICAgIGlkOiAyMjksCgogICAgICB9LAogICAgICB7CiAgICAgICAgdGl0bGU6ICdIYXQnLAogICAgICAgIHByaWNlOiAyODAsCiAgICAgICAgcXR5OiAxLAogICAgICAgIGlkOiAyNjgsCiAgICAgIH0sCiAgICBdLAogIH0KfSwKY29tcHV0ZWQ6IHsKICB0b3RhbENhcnQoKXsKICAgIGNvbnN0IHRvdGFsID0gdGhpcy5jYXJkcy5yZWR1Y2UoKGFjYywgY2FyZCk9PiB7CiAgICAgcmV0dXJuIGFjYyArIGNhcmQucHJpY2UqY2FyZC5xdHk7CiAgICB9LCAwKTsKICByZXR1cm4gdG90YWw7ICAgIAogIH0sCn0sCm1ldGhvZHM6ewogICAgZGVsZXRlSXRlbShjYXJkLCBpbmRleCkgewogICAgICBpZih0aGlzLmNhcmRzW2luZGV4XSA9PT0gY2FyZCkgeyAKICAgICAgICB0aGlzLmNhcmRzLnNwbGljZShpbmRleCwgMSkKICAgICAgfQogICAgfSwKICAgIG9uSW5jcmVtZW50KGNhcmQpewogICAgICByZXR1cm4gY2FyZC5xdHkrKzsKICAgIH0sCiAgICAgIG9uRGVjcmVtZW50KGNhcmQpewogICAgICByZXR1cm4gY2FyZC5xdHktLTsKICAgIH0sCiAgfQp9Cg=="},{"version":3,"sources":["DiagonValley.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DiagonValley.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"hello\">\n    <h1>{{ 'Shopping time' }}</h1>\n    <section>\n      <h2>Shopping Cart Items:</h2>\n      <div v-if=\"cards.length === 0\">\n        <p>No items to show</p>\n      </div>\n      <ul v-else>\n       <li v-for=\"(card, index) in cards\" :key=\"index\">  \n        <diagon-item\n          :card=\"card\"\n          @increment=\"onIncrement\"\n          @decrement=\"onDecrement\"\n          @delete=\"deleteItem(card, index)\"\n        />\n        </li>\n      </ul>\n      <div>\n        <h4>Total:</h4>\n        <p>{{`${totalCart} $$$`}}</p>\n      </div>\n    </section>\n    </div>\n</template>\n\n<script>\nimport DiagonItem from './DiagonItem.vue';\n\nexport default {\n  name: 'DiagonValley',\n  components: {\n    DiagonItem,\n  },\ndata() {\n  return {\n    cards:[\n      {\n        title: 'Book',\n        price: 31,\n        qty: 1,\n        id: 324,\n      },\n      {\n        title: 'Wand',\n        price: 240,\n        qty: 1,\n        id: 229,\n\n      },\n      {\n        title: 'Hat',\n        price: 280,\n        qty: 1,\n        id: 268,\n      },\n    ],\n  }\n},\ncomputed: {\n  totalCart(){\n    const total = this.cards.reduce((acc, card)=> {\n     return acc + card.price*card.qty;\n    }, 0);\n  return total;    \n  },\n},\nmethods:{\n    deleteItem(card, index) {\n      if(this.cards[index] === card) { \n        this.cards.splice(index, 1)\n      }\n    },\n    onIncrement(card){\n      return card.qty++;\n    },\n      onDecrement(card){\n      return card.qty--;\n    },\n  }\n}\n</script>\n<style scoped lang=\"scss\">\n\n</style>\n\n"]}]}