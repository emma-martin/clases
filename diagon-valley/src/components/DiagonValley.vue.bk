<template>
  <div class="hello">
    <h1>{{ 'Shopping time' }}</h1>
    <section>
    <h2>Shopping Cart Items:</h2>
      <ul v-for="(card, index) in cards" :key="index">
        <li>
          <div v-if="card.qty === 0">
            <p>No items to show</p>
          </div>
          <div class="card" v-else>
            <h3>{{card.title}}</h3>
            <label for="price">Price:</label>
            <input v-model="card.price" placeholder="price per wand" type="number" id="price" name="price">
            <label for="qty">Quantity:</label>
            <input v-model="card.qty"
             placeholder="quantity" 
             type="number" id="qty" 
             name="qty"
             @change="onChangeQty"
             @click="deleteItem(index)">
             <p>{{`total ${card.title}s'price: ${priceCategory(card)}`}}</p>
          </div>
        </li>
      </ul>
  <div>
    <h4>Total:</h4>
    <p>{{`${totalCart} $$$`}}</p>
  </div>
    </section>
  </div>
</template>

<script>
import DiagonItem from './DiagonItem.vue';

export default {
  name: 'DiagonValley',
  components: {
    DiagonItem,
  },
data() {
  return {
    cards:[
      {
        title: 'book',
        price: 31,
        qty: 1,
      },
      {
        title: 'wand',
        price: 240,
        qty: 1,
      },
      {
        title: 'hat',
        price: 280,
        qty: 1,
      },
    ],
  }
},
computed: {
  totalCart(){
    const total = this.cards.reduce((acc, card)=> {
     return acc + card.price*card.qty;
    }, 0);
  return total;    
  },
},
methods:{
    deleteItem(index) {
      if(this.cards[index].qty <= 0) { 
        this.cards.splice(index, 1)
      }
    },
    priceCategory(item) {
        return item.qty * item.price;
    },
    onChangeQty(qty){
      return qty;
    }
  }
}
</script>
<style scoped lang="scss">
h3 {
  margin: 40px 0 0;
}
ul {
  list-style-type: none;
  padding: 0;
}
li {
  display: inline-block;
  margin: 0 10px;
}
a {
  color: #42b983;
}
</style>


//todo: crear componente DiagonItem, se le envia el prop de la card,
el item emite los eventos de increment y decrement qty, 
mete un boton en cada fila que permite borrar un elemento del carrito
emitiendo el index a eliminar
